{"version":3,"sources":["webpack:///./src/components/ProjectList.js","webpack:///./src/pages/apps/index.js","webpack:///./src/data/apps.js"],"names":["ProjectList","items","numPerRow","onClick","numExtra","length","extra","Array","fill","display","flexWrap","xs","sm","flex","mr","flexDirection","map","project","index","ProjectListItem","key","label","title","description","year","image","ratio","style","clone","position","bgcolor","backgroundPosition","backgroundSize","backgroundImage","require","slugify","toLowerCase","marginRight","marginBottom","height","paddingBottom","bottom","right","left","px","py","justifyContent","textAlign","color","mb","GamesIndex","render","site","this","props","data","navigate","state","React","Component","exports","website"],"mappings":"2NAIO,SAASA,EAAT,GAA8D,IAAD,IAAtCC,aAAsC,MAA9B,GAA8B,MAA1BC,iBAA0B,MAAd,EAAc,EAAXC,EAAW,EAAXA,QACjDC,EAAWF,EAAaD,EAAMI,OAASH,EACvCI,EAAQ,IAAIC,MAAMH,IAAaF,EAAY,EAAIE,GAAUI,KAAK,IAEpE,OACE,kBAAC,IAAD,CACEC,QAAQ,OACRC,SAAU,CAAEC,GAAI,UAAWC,GAAI,QAC/BC,KAAM,EACNC,IAAK,EACLC,cAAe,CAAEJ,GAAI,SAAUC,GAAI,QAElC,sBAAIX,GAAJ,YAAcK,IAAOU,KAAI,SAACC,EAASC,GAAV,OACxB,kBAACC,EAAD,CACEC,IAAKF,EACLhB,UAAWA,EACXmB,MAAOJ,EAAQK,MACfC,YAAaN,EAAQO,KACrBN,MAAOA,EACPf,QAAS,kBAAMA,EAAQc,EAASC,UAOnC,SAASC,EAAT,GASH,IARFM,EAQC,EARDA,MACAJ,EAOC,EAPDA,MACAE,EAMC,EANDA,YACApB,EAKC,EALDA,QAKC,KAJDe,MAIC,EAHDQ,cAGC,MAHO,SAGP,MAFDxB,iBAEC,MAFW,EAEX,MADDyB,aACC,MADO,GACP,EACD,OAAKN,GAAUI,EAUb,kBAAC,IAAD,CACEG,OAAK,EACLf,KAAM,CAAEF,GAAI,EAAGC,GAAO,GAAKV,EAAV,KACjB2B,SAAS,WACTC,QAAQ,OACRH,MAAK,eACHI,mBAAoB,SACpBC,eAAgB,QAChBC,gBAAgB,OAAQC,UAAQ,KAAoBC,IAClDd,GACAe,cAF6B,QAAhB,IAGfC,YAAa,GACbC,aAAc,IACXX,IAGL,kBAAC,IAAD,CAAYxB,QAASA,GACnB,kBAAC,IAAD,CAAKoC,OAAQ,EAAGC,cAAed,GAC5BL,GACC,kBAAC,IAAD,CACEQ,SAAS,WACTY,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,GAAI,EACJC,GAAI,EACJC,eAAe,gBACfC,UAAU,OACVtC,QAAQ,OACRqB,QAAQ,mBAER,kBAAC,IAAD,CAAYH,MAAO,CAAEqB,MAAO,UAAY3B,GACvCE,GACC,kBAAC,IAAD,CAAYI,MAAO,CAAEqB,MAAO,UACzBzB,OA1Cb,kBAAC,IAAD,CACEV,KAAS,GAAKX,EAAV,IACJY,GAAI,CAAEH,GAAI,EAAGC,GAAI,GACjBqC,GAAI,CAAEtC,GAAI,EAAGC,GAAI,O,mJCtCnBsC,E,kGACJC,OAAA,WACE,OACE,kBAAC,IAAD,CAAQ7B,MAAM,OAAO8B,KAAMC,KAAKC,MAAMC,KAAKH,MACzC,kBAAC,IAAD,CACEnD,MAAOsD,OACPrD,UAAW,EACXC,QAAS,SAACc,EAASC,GAAV,OACPsC,mBAAS,SAASrB,IAAQlB,EAAQK,OAAOc,cAAiB,CACxDqB,MAAO,CAAExC,UAASsC,YAAMrC,gB,GATbwC,IAAMC,WAkBhBT,a,mBCoBfU,EAAQL,KA7CK,CAOX,CACEjC,MAAO,sBACPuC,QAAS,2BACTtC,YAAY,+EACZC,KAAM,MAER,CACEF,MAAO,QACPuC,QAAS,wBACTtC,YAAY,2FACZC,KAAM,MAER,CACEF,MAAO,QACPuC,QAAS,wBACTtC,YAAY,2FACZC,KAAM,MAER,CACEF,MAAO,aACPuC,QAAS,2BACTtC,YAAY,uGACZC,KAAM,MAER,CACEF,MAAO,gBACPuC,QAAS,0BACTtC,YAAY,kEACZC,KAAM,MAER,CACEF,MAAO,wBACPuC,QAAS,4BACTtC,YAAY,+EACZC,KAAM","file":"component---src-pages-apps-index-js-34a24ebdf79d289fb5f5.js","sourcesContent":["import React from 'react'\nimport slugify from 'slugify'\nimport { Box, ButtonBase, Typography } from '@material-ui/core'\n\nexport function ProjectList({ items = [], numPerRow = 3, onClick }) {\n  const numExtra = numPerRow - (items.length % numPerRow)\n  const extra = new Array(numExtra === numPerRow ? 0 : numExtra).fill('')\n\n  return (\n    <Box\n      display=\"flex\"\n      flexWrap={{ xs: 'no-wrap', sm: 'wrap' }}\n      flex={1}\n      mr={-2}\n      flexDirection={{ xs: 'column', sm: 'row' }}\n    >\n      {[...items, ...extra].map((project, index) => (\n        <ProjectListItem\n          key={index}\n          numPerRow={numPerRow}\n          label={project.title}\n          description={project.year}\n          index={index}\n          onClick={() => onClick(project, index)}\n        />\n      ))}\n    </Box>\n  )\n}\n\nexport function ProjectListItem({\n  image,\n  label,\n  description,\n  onClick,\n  index,\n  ratio = '66.66%',\n  numPerRow = 3,\n  style = {},\n}) {\n  if (!label && !image) {\n    return (\n      <Box\n        flex={`${90 / numPerRow}%`}\n        mr={{ xs: 0, sm: 2 }}\n        mb={{ xs: 2, sm: 2 }}\n      />\n    )\n  }\n  return (\n    <Box\n      clone\n      flex={{ xs: 1, sm: `${90 / numPerRow}%` }}\n      position=\"relative\"\n      bgcolor=\"gray\"\n      style={{\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundImage: `url(${require(`../assets/images/${slugify(\n          label\n        ).toLowerCase()}.png`)})`,\n        marginRight: 16,\n        marginBottom: 16,\n        ...style,\n      }}\n    >\n      <ButtonBase onClick={onClick}>\n        <Box height={0} paddingBottom={ratio}>\n          {label && (\n            <Box\n              position=\"absolute\"\n              bottom={0}\n              right={0}\n              left={0}\n              px={2}\n              py={1}\n              justifyContent=\"space-between\"\n              textAlign=\"left\"\n              display=\"flex\"\n              bgcolor=\"rgba(0,0,0,0.7)\"\n            >\n              <Typography style={{ color: 'white' }}>{label}</Typography>\n              {description && (\n                <Typography style={{ color: 'white' }}>\n                  {description}\n                </Typography>\n              )}\n            </Box>\n          )}\n        </Box>\n      </ButtonBase>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { graphql, navigate } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { data } from '../../data/apps'\nimport { ProjectList } from '../../components/ProjectList'\nimport slugify from 'slugify'\n\nclass GamesIndex extends React.Component {\n  render() {\n    return (\n      <Layout title=\"Apps\" site={this.props.data.site}>\n        <ProjectList\n          items={data}\n          numPerRow={3}\n          onClick={(project, index) =>\n            navigate(`/apps/${slugify(project.title).toLowerCase()}`, {\n              state: { project, data, index },\n            })\n          }\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default GamesIndex\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n","const data = [\n  // {\n  //   title: 'onehundred',\n  //   website: 'http://www.onehund.red/dogs',\n  //   description: `A hundred of anything.  Made in an hour as a personal jam.`,\n  //   year: 2021,\n  // },\n  {\n    title: 'Seneca 2D Animation',\n    website: 'https://www.seneca2d.com',\n    description: `Portfolio Showcase for Seneca Animation Grads.  Built with React + Firebase.`,\n    year: 2020,\n  },\n  {\n    title: 'CRRAL',\n    website: 'https://www.crral.com',\n    description: `Platform for finding freelancers in many different fields.  Built with React + Firebase.`,\n    year: 2019,\n  },\n  {\n    title: 'TAAFI',\n    website: 'https://www.taafi.com',\n    description: `Platform for finding freelancers in many different fields.  Built with React + Firebase.`,\n    year: 2019,\n  },\n  {\n    title: 'Rated Vets',\n    website: 'https://www.ratedvets.ca',\n    description: `Platform for finding freelancers in many different fields.  Built with React + Firebase/Google APIs.`,\n    year: 2019,\n  },\n  {\n    title: 'Northern Fury',\n    website: 'http://northernfury.us/',\n    description: `Custom React-based CMS that imports content via word documents.`,\n    year: 2019,\n  },\n  {\n    title: 'Drop Chrome extension',\n    website: 'https://www.joindrop.com/',\n    description: `Chrome extension that detects when offers are available on the current site.`,\n    year: 2019,\n  },\n]\n\nexports.data = data\n"],"sourceRoot":""}