{"version":3,"sources":["webpack:///./src/components/ProjectView.js","webpack:///./src/pages/games/view.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["ProjectView","label","project","data","index","backUri","nextIndex","length","prevIndex","display","mb","alignItems","justifyContent","flex","component","href","onClick","navigate","state","title","variant","to","my","flexDirection","xs","md","website","target","width","src","image","mx","description","view","render","this","props","location","site","Component","query","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","ref","_props$align","align","classes","className","_props$color","color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","root","concat","theme","margin","typography","caption","button","overline","srOnly","position","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name"],"mappings":"4FAAA,+FAIaA,EAAc,SAAC,GAMrB,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QAII,IAHJC,YAGI,MAHG,GAGH,MAFJC,aAEI,MAFI,EAEJ,EADJC,EACI,EADJA,QAEMC,EAAYF,EAAQ,GAAKD,EAAKI,OAAS,EAAIH,EAAQ,EACnDI,EAAYJ,EAAQ,EAAI,EAAID,EAAKI,OAAS,EAAIH,EAAQ,EAU5D,OAAKF,EAKH,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEO,QAAQ,OACRC,GAAI,EACJC,WAAW,SACXC,eAAe,iBAEf,kBAAC,IAAD,CAAKC,KAAM,GACT,kBAAC,IAAD,CAAYC,UAAU,IAAIC,KAAK,eAAeC,QAlBrC,kBACfC,mBAAYZ,EAAJ,QAAoB,CAC1Ba,MAAO,CAAEhB,QAASC,EAAKK,GAAYL,OAAMC,MAAOI,OAiBzCL,EAAKK,GAAWW,QAGrB,kBAAC,IAAD,CAAKN,KAAM,EAAGJ,QAAQ,OAAOG,eAAe,UAC1C,kBAAC,IAAD,CAAYQ,QAAQ,MAClB,kBAAC,OAAD,CAAMC,GAAIhB,GAAUJ,GADtB,MACuCC,EAAQiB,QAGjD,kBAAC,IAAD,CAAKN,KAAM,EAAGJ,QAAQ,OAAOG,eAAe,YAC1C,kBAAC,IAAD,CAAYE,UAAU,IAAIC,KAAK,eAAeC,QAhCzC,kBACXC,mBAAYZ,EAAJ,QAAoB,CAC1Ba,MAAO,CAAEhB,QAASC,EAAKG,GAAYH,OAAMC,MAAOE,OA+BzCH,EAAKG,GAAWa,SAKvB,kBAAC,IAAD,CACEG,GAAI,EACJb,QAAQ,OACRc,cAAe,CAAEC,GAAI,SAAUC,GAAI,OACnCd,WAAW,UAEX,kBAAC,IAAD,CAAYG,UAAU,IAAIC,KAAMb,EAAQwB,QAASC,OAAO,QACtD,yBAAKC,MAAO,IAAKC,IAAK3B,EAAQ4B,SAEhC,kBAAC,IAAD,CAAKR,GAAI,EAAGS,GAAI,GACd,kBAAC,IAAD,KAAa7B,EAAQ8B,aACpB9B,EAAQwB,SACP,kBAAC,IAAD,CAAYZ,UAAU,IAAIC,KAAMb,EAAQwB,QAASC,OAAO,QACrDzB,EAAQwB,YAzCZ,O,qKClBJ,IAAMO,EAAb,Y,QAAA,yD,EAAA,G,EAAA,G,6EAAA,YACEC,OAAA,WAAU,IAAD,EACmBC,KAAKC,MAAvBC,SADD,cACY,GADZ,GAECnB,aAFD,MAES,GAFT,EAGChB,EAAkCgB,EAAlChB,QAHD,EAGmCgB,EAAzBf,YAHV,MAGiB,GAHjB,IAGmCe,EAAdd,aAHrB,MAG6B,EAH7B,EAIP,OACE,kBAAC,IAAD,CAAQkC,KAAMH,KAAKC,MAAMjC,KAAKmC,MAC5B,kBAAC,IAAD,CACErC,MAAM,QACNI,QAAQ,SACRH,QAASA,EACTC,KAAMA,EACNC,MAAOA,MAZjB,GAA0BmC,aAmBXN,YAER,IAAMO,EAAK,c,kCC1BlB,wFA2IIC,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAAa,cAAiB,SAAoBhB,EAAOiB,GAC3D,IAAIC,EAAelB,EAAMmB,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAUpB,EAAMoB,QAChBC,EAAYrB,EAAMqB,UAClBC,EAAetB,EAAMuB,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C5C,EAAYsB,EAAMtB,UAClB8C,EAAiBxB,EAAM3B,QACvBA,OAA6B,IAAnBmD,EAA4B,UAAYA,EAClDC,EAAsBzB,EAAM0B,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgB3B,EAAM4B,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmB7B,EAAM8B,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiB/B,EAAMhB,QACvBA,OAA6B,IAAnB+C,EAA4B,QAAUA,EAChDC,EAAwBhC,EAAMiC,eAC9BA,OAA2C,IAA1BD,EAAmC3B,EAAwB2B,EAC5EE,EAAQ,YAAyBlC,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JG,EAAYzB,IAAcoD,EAAY,IAAMG,EAAejD,IAAYqB,EAAsBrB,KAAa,OAC9G,OAAoB,gBAAoBmB,EAAW,YAAS,CAC1DkB,UAAW,YAAKD,EAAQe,KAAMd,EAAuB,YAAZrC,GAAyBoC,EAAQpC,GAAoB,YAAVuC,GAAuBH,EAAQ,QAAQgB,OAAO,YAAWb,KAAUK,GAAUR,EAAQQ,OAAQF,GAAgBN,EAAQM,aAAcI,GAAaV,EAAQU,UAAqB,YAAVX,GAAuBC,EAAQ,QAAQgB,OAAO,YAAWjB,KAAsB,YAAZ9C,GAAyB+C,EAAQ,UAAUgB,OAAO,YAAW/D,MACvX4C,IAAKA,GACJiB,OAwEU,iBAlPK,SAAgBG,GAClC,MAAO,CAELF,KAAM,CACJG,OAAQ,GAIVvB,MAAOsB,EAAME,WAAWxB,MAGxBD,MAAOuB,EAAME,WAAWzB,MAGxB0B,QAASH,EAAME,WAAWC,QAG1BC,OAAQJ,EAAME,WAAWE,OAGzBnC,GAAI+B,EAAME,WAAWjC,GAGrBC,GAAI8B,EAAME,WAAWhC,GAGrBC,GAAI6B,EAAME,WAAW/B,GAGrBC,GAAI4B,EAAME,WAAW9B,GAGrBC,GAAI2B,EAAME,WAAW7B,GAGrBC,GAAI0B,EAAME,WAAW5B,GAGrBC,UAAWyB,EAAME,WAAW3B,UAG5BC,UAAWwB,EAAME,WAAW1B,UAG5B6B,SAAUL,EAAME,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVC,OAAQ,EACRrD,MAAO,EACPsD,SAAU,UAIZC,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIbpB,OAAQ,CACNkB,SAAU,SACVM,aAAc,WACdC,WAAY,UAId3B,aAAc,CACZ4B,aAAc,UAIhBxB,UAAW,CACTwB,aAAc,IAIhBC,aAAc,CACZhC,MAAO,WAITiC,aAAc,CACZjC,MAAOc,EAAMoB,QAAQC,QAAQC,MAI/BC,eAAgB,CACdrC,MAAOc,EAAMoB,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChBvC,MAAOc,EAAMoB,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClBzC,MAAOc,EAAMoB,QAAQM,KAAKF,WAI5BI,WAAY,CACV1C,MAAOc,EAAMoB,QAAQS,MAAMP,MAI7BQ,cAAe,CACb9F,QAAS,UAIX+F,aAAc,CACZ/F,QAAS,YAkHmB,CAChCgG,KAAM,iBADO,CAEZrD","file":"component---src-pages-games-view-js-8d4a0ed066a8c3ca2db9.js","sourcesContent":["import React from 'react'\nimport { navigate, Link } from 'gatsby'\nimport { Box, Typography, Button } from '@material-ui/core'\n\nexport const ProjectView = ({\n  label,\n  project,\n  data = [],\n  index = 0,\n  backUri,\n}) => {\n  const nextIndex = index + 1 >= data.length ? 0 : index + 1\n  const prevIndex = index - 1 < 0 ? data.length - 1 : index - 1\n  const next = () =>\n    navigate(`${backUri}/view`, {\n      state: { project: data[nextIndex], data, index: nextIndex },\n    })\n  const previous = () =>\n    navigate(`${backUri}/view`, {\n      state: { project: data[prevIndex], data, index: prevIndex },\n    })\n\n  if (!project) {\n    return null\n  }\n\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        mb={4}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box flex={1}>\n          <Typography component=\"a\" href=\"javascript:;\" onClick={previous}>\n            {data[prevIndex].title}\n          </Typography>\n        </Box>\n        <Box flex={1} display=\"flex\" justifyContent=\"center\">\n          <Typography variant=\"h6\">\n            <Link to={backUri}>{label}</Link> / {project.title}\n          </Typography>\n        </Box>\n        <Box flex={1} display=\"flex\" justifyContent=\"flex-end\">\n          <Typography component=\"a\" href=\"javascript:;\" onClick={next}>\n            {data[nextIndex].title}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        my={2}\n        display=\"flex\"\n        flexDirection={{ xs: 'column', md: 'row' }}\n        alignItems=\"center\"\n      >\n        <Typography component=\"a\" href={project.website} target=\"_new\">\n          <img width={500} src={project.image} />\n        </Typography>\n        <Box my={2} mx={2}>\n          <Typography>{project.description}</Typography>\n          {project.website && (\n            <Typography component=\"a\" href={project.website} target=\"_new\">\n              {project.website}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { Component } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { ProjectView } from '../../components/ProjectView'\n\nexport class view extends Component {\n  render() {\n    const { location = {} } = this.props\n    const { state = {} } = location\n    const { project, data = [], index = 0 } = state\n    return (\n      <Layout site={this.props.data.site}>\n        <ProjectView\n          label=\"Games\"\n          backUri=\"/games\"\n          project={project}\n          data={data}\n          index={index}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default view\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}